{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/anwesha/Desktop/DMS/components/reg.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nvar options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];\nexport default function SplitButton() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var anchorRef = React.useRef(null);\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedIndex = _React$useState4[0],\n      setSelectedIndex = _React$useState4[1];\n\n  var handleClick = function handleClick() {\n    console.info(\"You clicked \".concat(options[selectedIndex]));\n  };\n\n  var handleMenuItemClick = function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  var handleToggle = function handleToggle() {\n    setOpen(function (prevOpen) {\n      return !prevOpen;\n    });\n  };\n\n  var handleClose = function handleClose(event) {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    alignItems: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(ButtonGroup, {\n    variant: \"contained\",\n    color: \"primary\",\n    ref: anchorRef,\n    \"aria-label\": \"split button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, options[selectedIndex]), __jsx(Button, {\n    color: \"primary\",\n    size: \"small\",\n    \"aria-controls\": open ? 'split-button-menu' : undefined,\n    \"aria-expanded\": open ? 'true' : undefined,\n    \"aria-label\": \"select merge strategy\",\n    \"aria-haspopup\": \"menu\",\n    onClick: handleToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(ArrowDropDownIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))), __jsx(Popper, {\n    open: open,\n    anchorEl: anchorRef.current,\n    role: undefined,\n    transition: true,\n    disablePortal: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, function (_ref) {\n    var TransitionProps = _ref.TransitionProps,\n        placement = _ref.placement;\n    return __jsx(Grow, _extends({}, TransitionProps, {\n      style: {\n        transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), __jsx(Paper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, __jsx(ClickAwayListener, {\n      onClickAway: handleClose,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(MenuList, {\n      id: \"split-button-menu\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, options.map(function (option, index) {\n      return __jsx(MenuItem, {\n        key: option,\n        disabled: index === 2,\n        selected: index === selectedIndex,\n        onClick: function onClick(event) {\n          return handleMenuItemClick(event, index);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }\n      }, option);\n    })))));\n  })));\n}\n\n_s(SplitButton, \"iOJX1GbrjEJXdM49lHfo+/a1EuI=\");\n\n_c = SplitButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SplitButton\");","map":{"version":3,"sources":["/home/anwesha/Desktop/DMS/components/reg.js"],"names":["React","Grid","Button","ButtonGroup","ArrowDropDownIcon","ClickAwayListener","Grow","Paper","Popper","MenuItem","MenuList","options","SplitButton","useState","open","setOpen","anchorRef","useRef","selectedIndex","setSelectedIndex","handleClick","console","info","handleMenuItemClick","event","index","handleToggle","prevOpen","handleClose","current","contains","target","undefined","TransitionProps","placement","transformOrigin","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\n\nconst options = ['Create a merge commit', 'Squash and merge', 'Rebase and merge'];\n\nexport default function SplitButton() {\n  const [open, setOpen] = React.useState(false);\n  const anchorRef = React.useRef(null);\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\n\n  const handleClick = () => {\n    console.info(`You clicked ${options[selectedIndex]}`);\n  };\n\n  const handleMenuItemClick = (event, index) => {\n    setSelectedIndex(index);\n    setOpen(false);\n  };\n\n  const handleToggle = () => {\n    setOpen((prevOpen) => !prevOpen);\n  };\n\n  const handleClose = (event) => {\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  return (\n    <Grid container direction=\"column\" alignItems=\"center\">\n      <Grid item xs={12}>\n        <ButtonGroup variant=\"contained\" color=\"primary\" ref={anchorRef} aria-label=\"split button\">\n          <Button onClick={handleClick}>{options[selectedIndex]}</Button>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            aria-controls={open ? 'split-button-menu' : undefined}\n            aria-expanded={open ? 'true' : undefined}\n            aria-label=\"select merge strategy\"\n            aria-haspopup=\"menu\"\n            onClick={handleToggle}\n          >\n            <ArrowDropDownIcon />\n          </Button>\n        </ButtonGroup>\n        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\n          {({ TransitionProps, placement }) => (\n            <Grow\n              {...TransitionProps}\n              style={{\n                transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom',\n              }}\n            >\n              <Paper>\n                <ClickAwayListener onClickAway={handleClose}>\n                  <MenuList id=\"split-button-menu\">\n                    {options.map((option, index) => (\n                      <MenuItem\n                        key={option}\n                        disabled={index === 2}\n                        selected={index === selectedIndex}\n                        onClick={(event) => handleMenuItemClick(event, index)}\n                      >\n                        {option}\n                      </MenuItem>\n                    ))}\n                  </MenuList>\n                </ClickAwayListener>\n              </Paper>\n            </Grow>\n          )}\n        </Popper>\n      </Grid>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}